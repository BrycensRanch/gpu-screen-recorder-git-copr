name: Pull Upstream

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  update-gamescope:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Get Latest Commit for GPU Screen Recorder Binary
        id: get-commit
        working-directory: ./gpu-screen-recorder
        run: |
          latest_commit=$(git ls-remote https://repo.dec05eba.com/gpu-screen-recorder HEAD | cut -f1)
          git_date=$(git show -s --format=%ci $latest_commit | sed 's/[-:]//g' | cut -d' ' -f1)
          latest_tag=$(git describe --tags --abbrev=0)
          echo "latest-commit=$latest_commit" >> $GITHUB_OUTPUT
          echo "git-date=$git_date" >> $GITHUB_OUTPUT
          echo "latest-tag=$latest_tag" >> $GITHUB_OUTPUT


      - name: Get Current Commit for GPU Screen Recorder Binary
        id: get-current-commit
        run: |
          current_commit=$(grep -oP '(?<=^%global commit ).*' gpu-screen-recorder.spec)
          echo "current-commit=$current_commit" >> $GITHUB_OUTPUT

      - name: Compare Commits
        id: compare-commits
        run: |
          if [ "${{ steps.get-commit.outputs.latest-commit }}" != "${{ steps.get-current-commit.outputs.current-commit }}" ]; then
            echo "new-commit='true'" >> $GITHUB_OUTPUT
          else
            echo "new-commit='false'" >> $GITHUB_OUTPUT
          fi

      - name: Update Spec File
        if: ${{ contains(steps.compare-commits.outputs.new-commit, 'true') }}
        run: |
          sed -i "s/%global commit .*/%global commit ${{ steps.get-commit.outputs.latest-commit }}/g" gpu-screen-recorder.spec
          sed -i "s/%global git_date .*/%global git_date ${{ steps.get-commit.outputs.git-date }}/g" gpu-screen-recorder.spec
          sed -i "s/%global tag .*/%global tag ${{ steps.get-commit.outputs.latest-tag }}/g" gpu-screen-recorder.spec
          
      - name: Commit and Push Changes
        if: ${{ contains(steps.compare-commits.outputs.new-commit, 'true') }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add gpu-screen-recorder.spec
          git commit -m "chore: update commit to ${{ steps.get-commit.outputs.latest-commit }}"
          git push